{{ 'section-content-grid.css' | asset_url | stylesheet_tag }}
{{ 'component-slider.css' | asset_url | stylesheet_tag }}

{%- style -%}
  .section-{{ section.id }}-padding {
    padding-top: {{ section.settings.padding_top_mobile }}px;
    padding-bottom: {{ section.settings.padding_bottom_mobile }}px;
    background-color: {{ section.settings.background_color }};
  }

  .section:has(.section-{{ section.id }}-padding):before{
    background-color: {{ section.settings.background_color }};
  }

  .section:has(.section-{{ section.id }}-padding)  .content-grid__heading split-words{
    justify-content: {{ section.settings.heading_alignment }}
  }

  @media screen and (min-width: 768px) {
    .section-{{ section.id }}-padding {
      padding-top: {{ section.settings.padding_top }}px;
      padding-bottom: {{ section.settings.padding_bottom }}px;
    }
  }
{%- endstyle -%}

<div class="content-grid">
  <div
    class="page-width section-{{ section.id }}-padding  isolate{% if settings.animations_reveal_on_scroll %} scroll-trigger animate--slide-in{% endif %}"
    style="--button-color: {{ section.settings.button_color }};"
    {% if settings.animations_reveal_on_scroll %}
      data-cascade
    {% endif %}
  >
    {%- if section.settings.heading != blank -%}
        {%- assign delay = delay | plus: 1 -%}
        <{{ section.settings.heading_tag }} class="content-grid__heading page-width page-width--narrow heading font-bold leading-none {{ section.settings.heading_size }}" >
          {%- if section.settings.highlighted_text == 'none' -%}
            <split-words class="split-words  flex flex-wrap" data-animate="fade-up-large" data-animate-delay="{{ delay | times: 250 }}">{{ section.settings.heading }}</split-words>
          {%- else -%}
            {%- render 'highlighted-text', content: section.settings.heading, style: section.settings.highlighted_text, scribble: section.settings.highlighted_scribble, gradient: withGradient -%}
          {%- endif -%}
        </{{ section.settings.heading_tag }}>
      {%- endif -%}
    <div class="slider-mobile-gutter">
      <ul
        class="content-grid-list contains-content-container grid grid--{{ section.settings.columns_mobile }}-col-tablet-down grid--{{ section.settings.columns_desktop }}-col-desktop"
        id="Slider-{{ section.id }}"
        role="list"
      >
        {%- liquid
          assign highest_ratio_desktop = 0
          assign highest_ratio_mobile = 0
          for block in section.blocks
            if block.settings.image_mobile.aspect_ratio > highest_ratio_mobile
              assign highest_ratio_mobile = block.settings.image_mobile.aspect_ratio
            endif
          endfor
          for block in section.blocks
            if block.settings.image_desktop.aspect_ratio > highest_ratio_desktop
              assign highest_ratio_desktop = block.settings.image_desktop.aspect_ratio
            endif
          endfor
        -%}
        {%- for block in section.blocks -%}
            {% if block.type == 'column' %}
                {%- assign is_column_empty = '' -%}
                {%- if block.settings.image == blank
                    and block.settings.title == blank
                    and block.settings.text == blank
                -%}
                    {%- assign is_column_empty = ' content-grid-list__item--empty' -%}
                {%- endif -%}

                <li
                    id="Slide-{{ section.id }}-{{ forloop.index }}"
                    class="content-grid-list__item grid__item{% if section.settings.swipe_on_mobile %} slider__slide{% endif %}{% if section.settings.column_alignment == 'center' %} center{% endif %}{{ is_column_empty }}{% if settings.animations_reveal_on_scroll %} scroll-trigger animate--slide-in{% endif %}"
                    {{ block.shopify_attributes }}
                    {% if settings.animations_reveal_on_scroll %}
                    data-cascade
                    style="--animation-order: {{ forloop.index }};"
                    {% endif %}
                >
                    <{% unless block.settings.link == blank %}a href="{{ block.settings.link }}"{% else %}div {% endunless %} class="content-grid-card content-container">
                    {%- if block.settings.image_desktop != blank -%}
                        {% if section.settings.image_ratio == 'adapt' or section.settings.image_ratio == 'circle' %}
                        {% assign spaced_image = true %}
                        {% endif %}
                        <div class="content-grid-card__image-wrapper content-grid-card__image-wrapper--{{ section.settings.image_width }}-width{% if section.settings.image_width != 'full' or spaced_image %} content-grid-card-spacing{% endif %}">
                        {% assign image_type_strings = 'desktop,mobile' | split: ',' %}
                        {% for image_type_string in image_type_strings %}
                            {%- capture ratio_setting_key -%}highest_ratio_{{ image_type_string }}{%- endcapture -%}
                            {%- capture image_setting_key -%}image_{{ image_type_string }}{%- endcapture -%}
                            {%- if block.settings[image_setting_key] != blank -%}
                            <div
                                class="media media--transparent media--{{ section.settings.image_ratio }} {% unless block.settings.image_mobile == blank %} media--{{ image_type_string }} {% endunless %}"
                                {% if section.settings.image_ratio == 'adapt' %}
                                style="padding-bottom: {{ 1 | divided_by: [ratio_setting_key] | times: 100 }}%;"
                                {% endif %}
                            >
                                {%- liquid
                                assign number_of_columns = section.settings.columns_desktop
                                assign number_of_columns_mobile = section.settings.columns_mobile
                                assign grid_space_desktop = number_of_columns | minus: 1 | times: settings.spacing_grid_horizontal | plus: 100 | append: 'px'
                                assign grid_space_tablet = number_of_columns_mobile | minus: 1 | times: settings.spacing_grid_horizontal | plus: 100 | append: 'px'
                                assign grid_space_mobile = number_of_columns_mobile | minus: 1 | times: settings.spacing_grid_horizontal | divided_by: 2 | plus: 30 | append: 'px'
                                if section.settings.image_width == 'half'
                                    assign image_width = 0.5
                                elsif section.settings.image_width == 'third'
                                    assign image_width = 0.33
                                else
                                    assign image_width = 1
                                endif
                                -%}
                                {% capture sizes %}
                                (min-width: {{ settings.page_width }}px) calc(({{ settings.page_width }}px - {{ grid_space_desktop }}) * {{ image_width }} /  {{ number_of_columns }}),
                                (min-width: 990px) calc((100vw - {{ grid_space_desktop }}) * {{ image_width }} / {{ number_of_columns }}),
                                (min-width: 750px) calc((100vw - {{ grid_space_tablet }}) * {{ image_width }} / {{ number_of_columns_mobile }}),
                                calc((100vw - {{ grid_space_mobile }}) * {{ image_width }} / {{ number_of_columns_mobile }})
                                {% endcapture %}
                                {{
                                block.settings[image_setting_key]
                                | image_url: width: 3200
                                | image_tag:
                                    widths: '50, 75, 100, 150, 200, 300, 400, 500, 750, 1000, 1250, 1500, 1750, 2000, 2250, 2500, 2750, 3000, 3200',
                                    sizes: sizes,
                                    class: 'content-grid-card__image'
                                }}
                            </div>
                            {%- endif -%}
                        {% endfor %}
                        </div>
                    {%- endif -%}
                    <div class="content-grid-card__info">
                        {%- if block.settings.title != blank -%}
                        <h3 class="inline-richtext">{{ block.settings.title }}</h3>
                        {%- endif -%}
                        {%- if block.settings.text != blank -%}
                        <div class="rte">{{ block.settings.text }}</div>
                        {%- endif -%}
                    </div>
                    </{% unless block.settings.link == blank %}a{% else %}div {% endunless %}>
                </li>
            {% endif %}
        {%- endfor -%}
      </ul>
    </div>
    {% assign button_blocks = section.blocks | where: 'type', 'button' %}
    {% if button_blocks.size > 0 %}
        <div class="content-grid__buttons">
            {% for block in section.blocks %}
                {%- if block.settings.button_label != blank -%}
                  <a class="button{% if block.settings.button_secondary_style %} button--secondary{% else %} button--primary{% endif %} button--fixed button--{{ block.settings.button_size }} icon-with-text"{% if block.settings.button_link != blank %} href="{{ block.settings.button_link }}"{% else %} role="link" aria-disabled="true"{% endif %} is="hover-link" {{ block.shopify_attributes }}>
                    <span class="btn-fill" data-fill></span>
                    <span class="btn-text">
                      {%- liquid
                        echo block.settings.button_label | escape
                      -%}
                    </span>
                  </a>
                {%- endif -%}
            {% endfor %}
        </div>
    {% endif %}
  </div>
</div>

{% schema %}
{
  "name": "Content grid",
  "class": "section",
  "tag": "section",
  "disabled_on": {
    "groups": ["header", "footer"]
  },
  "settings": [
    {
        "type": "inline_richtext",
        "id": "heading",
        "default": "Image with text overlay",
        "label": "t:sections.global.settings.heading.label"
      },
      {
        "type": "text_alignment",
        "id": "heading_alignment",
        "default": "left",
        "label": "Heading alignment"
      },
      {
        "type": "select",
        "id": "heading_size",
        "options": [
          {
            "value": "title-sm",
            "label": "t:sections.global.settings.heading_size.options__1.label"
          },
          {
            "value": "title-md",
            "label": "t:sections.global.settings.heading_size.options__2.label"
          },
          {
            "value": "title-lg tracking-heading",
            "label": "t:sections.global.settings.heading_size.options__3.label"
          },
          {
            "value": "title-xl tracking-heading",
            "label": "t:sections.global.settings.heading_size.options__4.label"
          }
        ],
        "default": "title-lg tracking-heading",
        "label": "t:sections.global.settings.heading_size.label"
      },
      {
        "type": "select",
        "id": "heading_tag",
        "options": [
          {
            "value": "h1",
            "label": "t:sections.global.settings.heading_tag.options__1.label"
          },
          {
            "value": "h2",
            "label": "t:sections.global.settings.heading_tag.options__2.label"
          },
          {
            "value": "h3",
            "label": "t:sections.global.settings.heading_tag.options__3.label"
          },
          {
            "value": "h4",
            "label": "t:sections.global.settings.heading_tag.options__4.label"
          },
          {
            "value": "h5",
            "label": "t:sections.global.settings.heading_tag.options__5.label"
          },
          {
            "value": "h6",
            "label": "t:sections.global.settings.heading_tag.options__6.label"
          },
          {
            "value": "div",
            "label": "t:sections.global.settings.heading_tag.options__7.label"
          },
          {
            "value": "span",
            "label": "t:sections.global.settings.heading_tag.options__8.label"
          },
          {
            "value": "p",
            "label": "t:sections.global.settings.heading_tag.options__9.label"
          }
        ],
        "default": "h2",
        "label": "t:sections.global.settings.heading_tag.label",
        "info": "t:sections.global.settings.heading_tag.info"
      },
      {
        "type": "header",
        "content": "t:sections.global.settings.header__highlight.content",
        "info": "t:sections.global.settings.header__highlight.info"
      },
      {
        "type": "select",
        "id": "highlighted_text",
        "options": [
          {
            "value": "none",
            "label": "t:sections.global.settings.highlighted_text.options__1.label"
          },
          {
            "value": "text",
            "label": "t:sections.global.settings.highlighted_text.options__2.label"
          },
          {
            "value": "full_text",
            "label": "t:sections.global.settings.highlighted_text.options__3.label"
          },
          {
            "value": "half_text",
            "label": "t:sections.global.settings.highlighted_text.options__4.label"
          },
          {
            "value": "underline",
            "label": "t:sections.global.settings.highlighted_text.options__5.label"
          },
          {
            "value": "stencil",
            "label": "t:sections.global.settings.highlighted_text.options__6.label"
          },
          {
            "value": "scribble",
            "label": "t:sections.global.settings.highlighted_text.options__7.label"
          }
        ],
        "default": "none",
        "label": "t:sections.global.settings.highlighted_text.label"
      },
      {
        "type": "select",
        "id": "highlighted_scribble",
        "options": [
          {
            "value": "circle",
            "label": "t:sections.global.settings.highlighted_scribble.options__1.label"
          },
          {
            "value": "basic-underline",
            "label": "t:sections.global.settings.highlighted_scribble.options__2.label"
          },
          {
            "value": "sketch-underline",
            "label": "t:sections.global.settings.highlighted_scribble.options__3.label"
          },
          {
            "value": "squiggle-underline",
            "label": "t:sections.global.settings.highlighted_scribble.options__4.label"
          },
          {
            "value": "squiggle-underline-2",
            "label": "t:sections.global.settings.highlighted_scribble.options__5.label"
          }
        ],
        "default": "circle",
        "label": "t:sections.global.settings.highlighted_scribble.label",
        "info": "t:sections.global.settings.highlighted_scribble.info"
      },
    {
      "type": "select",
      "id": "image_width",
      "options": [
        {
          "value": "third",
          "label": "Third"
        },
        {
          "value": "half",
          "label": "Half"
        },
        {
          "value": "full",
          "label": "Full"
        }
      ],
      "default": "full",
      "label": "Image width"
    },
    {
      "type": "range",
      "id": "columns_desktop",
      "min": 1,
      "max": 6,
      "step": 1,
      "default": 3,
      "label": "Number of columns desktop"
    },
    {
      "type": "select",
      "id": "column_alignment",
      "options": [
        {
          "value": "left",
          "label": "Left"
        },
        {
          "value": "center",
          "label": "Center"
        }
      ],
      "default": "left",
      "label": "Columns alignment"
    },
    {
      "type": "header",
      "content": "Mobile layout"
    },
    {
      "type": "select",
      "id": "columns_mobile",
      "options": [
        {
          "value": "1",
          "label": "1 column"
        },
        {
          "value": "2",
          "label": "2 column"
        }
      ],
      "default": "1",
      "label": "Number of column mobile"
    },
    {
      "type": "color",
      "label": "Background color",
      "id": "background_color"
    },
    {
      "type": "color",
      "label": "Button ground color",
      "id": "button_color"
    },
    {
      "type": "header",
      "content": "Spacing between sections"
    },
    {
      "type": "range",
      "id": "padding_top",
      "min": 0,
      "max": 100,
      "step": 1,
      "unit": "px",
      "label": "Padding top",
      "default": 40
    },
    {
      "type": "range",
      "id": "padding_bottom",
      "min": 0,
      "max": 100,
      "step": 1,
      "unit": "px",
      "label": "Padding bottom",
      "default": 52
    },
    {
      "type": "header",
      "content": "Mobile"
    },
    {
      "type": "range",
      "id": "padding_top_mobile",
      "min": 0,
      "max": 100,
      "step": 1,
      "unit": "px",
      "label": "Padding top mobile",
      "default": 36
    },
    {
      "type": "range",
      "id": "padding_bottom_mobile",
      "min": 0,
      "max": 100,
      "step": 1,
      "unit": "px",
      "label": "Padding bottom mobile",
      "default": 36
    }
  ],
  "blocks": [
    {
      "type": "column",
      "name": "Column",
      "settings": [
        {
          "type": "inline_richtext",
          "id": "title",
          "default": "Column",
          "label": "Title"
        },
        {
          "type": "richtext",
          "id": "text",
          "default": "<p>Pair text with an image to focus on your chosen product, collection, or blog post. Add details on availability, style, or even provide a review.</p>",
          "label": "Subtitle"
        },
        {
          "type": "url",
          "id": "link",
          "label": "Link"
        },
        {
          "type": "header",
          "content": "Desktop"
        },
        {
          "type": "image_picker",
          "id": "image_desktop",
          "label": "Desktop image"
        },
        {
          "type": "header",
          "content": "Mobile"
        },
        {
          "type": "image_picker",
          "id": "image_mobile",
          "label": "Mobile image"
        }
      ]
    },
    {
        "type": "button",
        "name": "Button item",
        "settings": [
            {
                "type": "text",
                "id": "button_label",
                "default": "Button label",
                "label": "Button label"
              },
              {
                "type": "url",
                "id": "button_link",
                "label": "Button link"
              }
        ]
      }
  ],
  "presets": [
    {
      "name": "Content grid",
      "blocks": [
        {
          "type": "column"
        },
        {
          "type": "column"
        },
        {
          "type": "column"
        }
      ]
    }
  ]
}
{% endschema %}
